/*
=============================================================================
-----------------------------------------------------------------------------
					05 MAGNITUDE_ANALYSIS
-----------------------------------------------------------------------------

Purpose:
    - To quantify data and group results by specific dimensions.
    - For understanding data distribution across categories.

SQL Functions Used:
    - Aggregate Functions: SUM(), COUNT(), AVG()
    - GROUP BY, ORDER BY
=============================================================================

SELECT TOP 5 * FROM GOLD.DIM_CUSTOMERS;
SELECT TOP 5 * FROM GOLD.DIM_PRODUCTS;
SELECT TOP 5 * FROM GOLD.FACT_SALES;

*/

--FIND THE TOTAL NUMBER OF CUSTOMERS BY COUNTRIES--
SELECT country,COUNT(customer_key) as Total_Customers from gold.dim_customers 
GROUP BY country
ORDER BY Total_Customers DESC;

--FIND TOTAL CUSTOMERS BY GENDER--
SELECT gender,COUNT(customer_key) as Total_customers FROM gold.dim_customers
GROUP BY gender
ORDER BY Total_customers DESC;

--FIND THE TOTAL PRODUCTS BY CATEGORY--
SELECT category,count(product_key) as Total_Products FROM gold.dim_products
GROUP BY category
ORDER BY Total_Products DESC;

--FIND THE AVG COST IN EACH CATEGORY--
SELECT category,AVG(prd_cost) as Avg_Cost FROM gold.dim_products
GROUP BY category
order by Avg_Cost DESC;

--REVENUE GENERATED FOR EACH CATEGORY--
SELECT d.category as category,sum(f.sales_amount) as Total_revenue
from gold.fact_sales f left join gold.dim_products d on 
f.product_key=d.product_key
GROUP BY d.category
ORDER BY Total_revenue DESC;

--FIND THE TOTAL REVENUE GENERATED BY EACH CUSTOMER--
SELECT c.customer_key as Customer_id,c.first_name as First_name,
c.last_name as Last_name,sum(s.sales_amount) as Total_Revenue
from gold.fact_sales s LEFT JOIN 
GOLD.dim_customers c on
s.customer_key=c.customer_key
GROUP BY c.customer_key,
c.first_name,
c.last_name
ORDER BY Total_Revenue DESC;

--FIND THE DISTRIBUTION OF SOLD ITEMS ACROSS COUNTRIES--
SELECT c.country as country,SUM(s.quantity) as sold_items
from gold.fact_sales s LEFT JOIN gold.dim_customers c on
s.customer_key=c.customer_key
GROUP BY c.country
ORDER BY sold_items DESC;
